<!DOCTYPE html>
<html lang="en">

<head>
  <title>Trakanta</title>
  <%- include('../head') %>
  <!-- datatable -->
  <link href="/css/addons/datatables.min.css" rel="stylesheet" />
  <script src="https://cdnjs.cloudflare.com/ajax/libs/PapaParse/5.3.0/papaparse.min.js"
    integrity="sha512-rKFvwjvE4liWPlFnvH4ZhRDfNZ9FOpdkD/BU5gAIA3VS3vOQrQ5BjKgbO3kxebKhHdHcNUHLqxQYSoxee9UwgA=="
    crossorigin="anonymous"></script>
  <script src="https://cdnjs.cloudflare.com/ajax/libs/PapaParse/5.3.0/papaparse.js"
    integrity="sha512-/McISOEKVzVvgu12/1Hk8dSrbKBShnKn79/R50ysl5qWR1zgj347kOT8LJJvInxHDSPmiBG9vg5AhMx6rcELJg=="
    crossorigin="anonymous"></script>
  <!-- Your custom styles (optional) -->
  <style>
    th {
      white-space: nowrap;
    }

    .scroll {
      overflow: scroll;
      height: 400px;
    }

    .double-nav .breadcrumb-dn {
      color: #fff;
    }

    .side-nav.wide.slim .sn-ad-avatar-wrapper a span {
      display: none;
    }

    .popup {
      width: 900px;
      margin: auto;
      text-align: center
    }

    .popup img {
      width: 200px;
      height: 200px;
      cursor: pointer
    }

    .show {
      z-index: 999;
      display: none;
    }

    .show .overlay {
      width: 100%;
      height: 100%;
      background: rgba(0, 0, 0, .66);
      position: absolute;
      top: 0;
      left: 0;
    }

    .show .img-show {
      width: 600px;
      height: 400px;
      background: #FFF;
      position: absolute;
      top: 50%;
      left: 50%;
      transform: translate(-50%, -50%);
      overflow: hidden
    }

    .img-show span {
      position: absolute;
      top: 10px;
      right: 10px;
      z-index: 99;
      cursor: pointer;
    }

    table th:first-child {
      border-radius: 10px 0 0 10px;
    }

    table th:last-child {
      border-radius: 0 10px 10px 0;
    }

    .img-show img {
      width: 100%;
      height: 100%;
      position: absolute;
      top: 0;
      left: 0;
    }

    .mdb-skin .side-nav .collapsible li .collapsible-header:hover {
      border-radius: 0px 9px 9px 0px;
      color: #ddba0b;
      margin-top: 5px;
      margin-right: 40px;
      background-color: rgba(255, 255, 255, 1);
    }

    .total-price {
      width: 143px;
      height: 47px;
      margin: 35px 13.5px 15px 11.5px;
      padding: 8px 46.5px 8px 41.5px;
      border-radius: 10px;
      background-color: #b5b5b5;
    }
  </style>
</head>

<body class="fixed-sn mdb-skin">
  <%- include('navigation') %>

  <!--Main Layout-->
  <main>
    <div class="container-fluid " id="app">
      <h2>สมาชิก</h2>



      <div class="card card-cascade narrower mt-5">
        <section>
          <div class="row">
            <div class="col-12">
              <div class="card-body">
                <div class="table-responsive text-nowrap">
                  <span class="table-add float-right mb-3 mr-2" style="margin-top: 4px"><a href="#!"
                      class="text-success" data-toggle="modal" data-target="#modalinsert"><i class="fas fa-plus fa-2x"
                        aria-hidden="true"></i></a></span>
                  <div class="my-5">

                  </div>

                  <table id="tbl-data"></table>
                  <table id="example" class="table table-striped row-border mt-3" cellspacing="0" width="100%">
                    <thead style="border-radius: 10px;">
                      <tr class="text-center" style="color: #fff;
                      border-radius: 10px;
                      background-color: #9e7d35;">
                        <th></th>
                        <th>ชื่อ-นามสกุล</th>
                        <th>อีเมล</th>
                        <th>เบอร์โทร</th>
                        <th>หมายเหตุ</th>

                      </tr>
                    </thead>
                    <tfoot>
                      <tr>
                        <td></td>
                        <td></td>
                        <td></td>
                        <td></td>
                        <td></td>

                      </tr>
                    </tfoot>
                    <tbody class="text-center">
                      <% for(const [key, member] of Object.entries(data))  {%>
                      <tr>
                        <td></td>
                        <td><%= member.member_name %></td>
                        <td><%= member.member_email %></td>
                        <td><%= member.member_telno %></td>
                        <td><%= member.member_detail %></td>
                      </tr>
                      <%}%>
                    </tbody>
                  </table>
                </div>
              </div>
            </div>
          </div>
        </section>
      </div>
      <div style="height: 300px"></div>
    

  <%- //include('footer') %>

                      <script src="/js/jquery-3.4.1.min.js"></script>
                      <!-- Bootstrap tooltips -->
                      <script type="text/javascript" src="/js/bootstrap.js"></script>
                      <!-- MDB core JavaScript -->
                      <script type="text/javascript" src="/js/mdb.min.js"></script>
                      <!-- Custom scripts -->
                      <!-- <script type="text/javascript" src="/js/page/nav-active.js"></script> -->
                      <script src="https://cdn.jsdelivr.net/npm/vue@2.6.12/dist/vue.js"></script>
                      <script src="https://cdn.jsdelivr.net/npm/vue@2.6.12"></script>
                      <!-- MDBootstrap Datatables  -->
                      <script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>

                      <script type="text/javascript" src="/js/addons/datatables.min.js"></script>
                      <!-- sweetalert2 -->
                      <script src="https://cdn.jsdelivr.net/npm/sweetalert2@10"></script>
                      <script type="text/javascript">
                        $(document).ready(function () {
                          // SideNav Initialization
                          $(".button-collapse").sideNav();
                          //data table
                          $('#myModal').on('shown.bs.modal', function () {
                            $('#myInput').trigger('focus')
                          })
                          // DataTable initialisation

                          $('#example').DataTable({
                            "paging": true,
                            "autoWidth": true,

                          });

                          $(".dataTables_length").addClass("bs-select");

                          $(".mdb-select").materialSelect();
                        });

                        // MDB Lightbox Init
                        $(function () {
                          $("#mdb-lightbox-ui").load("/mdb-addons/mdb-lightbox-ui.html");
                        });
                        switch (window.location.search) {

                          case "?alert=insert-success":
                            toastr.success("เพิ่มรายชื่อลูกค้าเรียบร้อยค่ะ");
                            break;
                          case "?alert=update-success":
                            toastr.success("ยืนยันการจองเรียบร้อยแล้วค่ะ");
                            break;
                          case "?alert=edit-success":
                            toastr.warning("แก้ข้อมูลลูกค้าเรียบร้อยค่ะ");
                            break;
                          case "?alert=delete-success":
                            toastr.warning("ลบรายข้อมูลสมาชิกสำเร็จ");
                            break;
                          case "?alert=confirm-success":
                            toastr.success("ยืนยันโต๊ะเสร็จสิ้น");
                            break;
                        }
                        function _edit(id, userid) {
                          const swalWithBootstrapButtons = Swal.mixin({
                            customClass: {
                              confirmButton: "btn btn-success",
                              cancelButton: "btn btn-danger",
                            },
                            buttonsStyling: false,
                          });

                          swalWithBootstrapButtons
                            .fire({
                              title: "คุณต้องเปลี่ยนสถานะจอง ?",
                              //text: "You won't be able to revert this!",
                              icon: "warning",
                              showCancelButton: true,
                              confirmButtonText: "ยืนยันการจอง",
                              cancelButtonText: "ยกเลิก",
                              reverseButtons: true,
                            })
                            .then((result) => {
                              if (result.isConfirmed) {
                                window.location.href = "/admin/rev/edit/" + id + "/" + userid;
                              }
                            });
                        }

                        function _approve(id, userid) {
                          const swalWithBootstrapButtons = Swal.mixin({
                            customClass: {
                              confirmButton: "btn btn-success",
                              cancelButton: "btn btn-danger",
                            },
                            buttonsStyling: false,
                          });

                          swalWithBootstrapButtons
                            .fire({
                              title: "คุณต้องการยืนยันการจอง ?",
                              //text: "You won't be able to revert this!",
                              icon: "warning",
                              showCancelButton: true,
                              confirmButtonText: "ยืนยันการจอง",
                              cancelButtonText: "ยกเลิก",
                              reverseButtons: true,
                            })
                            .then((result) => {
                              if (result.isConfirmed) {
                                window.location.href = "/admin/rev/" + id + "/" + userid;
                              }
                            });
                        }
                        function _approveCoupon(id, userid, coupon, amount) {
                          const swalWithBootstrapButtons = Swal.mixin({
                            customClass: {
                              confirmButton: "btn btn-success",
                              cancelButton: "btn btn-danger",
                            },
                            buttonsStyling: false,
                          });
                          swalWithBootstrapButtons
                            .fire({
                              title: "คุณต้องการยืนยันการจอง ?",
                              //text: "You won't be able to revert this!",
                              icon: "warning",
                              showCancelButton: true,
                              confirmButtonText: "ยืนยันการจอง",
                              cancelButtonText: "ยกเลิก",
                              reverseButtons: true,
                            })
                            .then((result) => {
                              if (result.isConfirmed) {
                                window.location.href = "/admin/rev/used/" + id + "/" + userid + "/" + coupon + "/" +
                                  amount;
                              }
                            });
                        }

                        function _approvetable(id, userid) {
                          const swalWithBootstrapButtons = Swal.mixin({
                            customClass: {
                              confirmButton: "btn btn-success",
                              cancelButton: "btn btn-danger",
                            },
                            buttonsStyling: false,
                          });

                          swalWithBootstrapButtons
                            .fire({
                              title: "คุณต้องการยืนยันการจอง ?",
                              //text: "You won't be able to revert this!",
                              icon: "warning",
                              showCancelButton: true,
                              confirmButtonText: "ยืนยันการจอง",
                              cancelButtonText: "ยกเลิก",
                              reverseButtons: true,
                            })
                            .then((result) => {
                              if (result.isConfirmed) {
                                window.location.href = "/admin/rev/booked/" + id + "/" + userid;
                              }
                            });
                        }

                        function _delete(id, userid) {
                          const swalWithBootstrapButtons = Swal.mixin({
                            customClass: {
                              confirmButton: "btn btn-success",
                              cancelButton: "btn btn-danger",
                            },
                            buttonsStyling: false,
                          });

                          swalWithBootstrapButtons
                            .fire({
                              title: "คุณต้องการลบรายการนี้ ?",
                              //text: "You won't be able to revert this!",
                              icon: "warning",
                              showCancelButton: true,
                              confirmButtonText: "ยืนยัน",
                              cancelButtonText: "ยกเลิก",
                              reverseButtons: true,
                            })
                            .then((result) => {
                              if (result.isConfirmed) {
                                window.location.href = "/admin/rev/delete/" + id + "/" + userid;
                              }
                            });
                        }
                        new Vue({
                          el: "#app",
                          data() {
                            return {
                              edit_id: '',
                              delete_id: '',
                              edit_member_name: '',
                              edit_facebook_name: '',
                              edit_member_email: '',
                              edit_member_telno: '',
                              edit_member_address: '',
                              edit_sec_member_address: '',
                              edit_member_totalprice: 0,
                              edit_member_detail: '',
                              check: false,
                              member_name: '',
                              member_email: '',
                              member_telno: '',
                              member_address: '',
                              sec_member_address: '',
                              member_detail: '',
                              facebook_name: '',
                              membername: '',
                              productsize: '',
                              productname: '',
                              productdetail: '',
                              category: '',
                              productcode: '',
                              productprice: 0,
                              totalprice: 0,
                              status: '',
                              displayName: 'fff',
                              userId: '',
                              pictureUrl: '',
                              temail: '',
                              qrcode: '',
                              id: 0,
                              all_order: [{
                                order_id: 0
                              }],
                              row: ''
                            }

                          },
                          created() {
                            // this.loadUsers();
                          },
                          methods: {
                            isNumber: function (evt) {
                              evt = (evt) ? evt : window.event;
                              var charCode = (evt.which) ? evt.which : evt.keyCode;
                              if ((charCode > 31 && (charCode < 48 || charCode > 57)) && charCode !== 46) {
                                evt.preventDefault();;
                              } else {
                                return true;
                              }
                            },
                            async deleteMember(id) {
                              const swalWithBootstrapButtons = Swal.mixin({
                                customClass: {
                                  confirmButton: "btn btn-success",
                                  cancelButton: "btn btn-danger",
                                },
                                buttonsStyling: false,
                              });

                              swalWithBootstrapButtons
                                .fire({
                                  title: "คุณต้องการยืนยันการลบข้อมูลสมาชิก ?",
                                  //text: "You won't be able to revert this!",
                                  icon: "warning",
                                  showCancelButton: true,
                                  confirmButtonText: "ยืนยัน",
                                  cancelButtonText: "ยกเลิก",
                                  reverseButtons: true,
                                })
                                .then((result) => {
                                  if (result.isConfirmed) {
                                    window.location.href = "/member/del/" + id;
                                  }
                                });
                            },
                            async editMember(id, member_name, facebook_name, member_email, member_telno,
                              member_address, sec_member_address, member_totalprice, member_detail) {
                              this.edit_id = id;
                              this.edit_member_name = member_name;
                              this.edit_facebook_name = facebook_name;
                              this.edit_member_email = member_email;
                              this.edit_member_telno = member_telno;
                              this.edit_member_address = member_address;
                              this.edit_sec_member_address = sec_member_address;
                              this.edit_member_totalprice = parseInt(member_totalprice);
                              this.edit_member_detail = member_detail;
                              $('#editModal').modal('show')  
                              // $('#editModal').modal('show');
                            },
                            async _upload() {
                              var od_id = 0;
                              Papa.parse(document.getElementById('upload-csv').files[0], {
                                download: true,
                                header: false,
                                complete: function (results) {
                                  console.log('======results======')
                                  var empty = false
                                  check();

                                  function check() {
                                    for (let i = 0; i < results.data.length; i++) {
                                      if (results.data[i][0] == "") {
                                        console.log
                                        empty = true
                                      }
                                    }
                                  }
                                  if (empty == true) {
                                    Swal.fire(
                                      'Good job!',
                                      'You clicked the button!',
                                      'warning'
                                    )
                                  } else {
                                    axios.post('/member/importmember', {
                                        data: results
                                      })
                                      .then((response) => {
                                        console.log(response);
                                        if (response.status == 200) {
                                          window.location.href = "/member";
                                        }
                                      }, (error) => {
                                        console.log(error);
                                      });
                                    console.log(results.data[0])
                                  }
                                  console.log('======results======')

                                }
                              });
                            }
                          }
                        })
                      </script>
</body>

</html>